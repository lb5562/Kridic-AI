{"ast":null,"code":"import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts } from \"./base.js\";\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage extends BaseMessage {\n  static lc_name() {\n    return \"FunctionMessage\";\n  }\n  constructor(fields, /** @deprecated */\n  name) {\n    if (typeof fields === \"string\") {\n      // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n      fields = {\n        content: fields,\n        name: name\n      };\n    }\n    super(fields);\n  }\n  _getType() {\n    return \"function\";\n  }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk extends BaseMessageChunk {\n  static lc_name() {\n    return \"FunctionMessageChunk\";\n  }\n  _getType() {\n    return \"function\";\n  }\n  concat(chunk) {\n    return new FunctionMessageChunk({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n      response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n      name: this.name ?? \"\"\n    });\n  }\n}","map":{"version":3,"names":["BaseMessage","BaseMessageChunk","mergeContent","_mergeDicts","FunctionMessage","lc_name","constructor","fields","name","content","_getType","FunctionMessageChunk","concat","chunk","additional_kwargs","response_metadata"],"sources":["C:/Users/lucil/Gen-AI-Contest/FrontEnd/kridic-front/node_modules/@langchain/core/dist/messages/function.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage extends BaseMessage {\n    static lc_name() {\n        return \"FunctionMessage\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name: name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"FunctionMessageChunk\";\n    }\n    _getType() {\n        return \"function\";\n    }\n    concat(chunk) {\n        return new FunctionMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            name: this.name ?? \"\",\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,WAAW,QAAS,WAAW;AACrF;AACA;AACA;AACA,OAAO,MAAMC,eAAe,SAASJ,WAAW,CAAC;EAC7C,OAAOK,OAAOA,CAAA,EAAG;IACb,OAAO,iBAAiB;EAC5B;EACAC,WAAWA,CAACC,MAAM,EAClB;EACAC,IAAI,EAAE;IACF,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC5B;MACAA,MAAM,GAAG;QAAEE,OAAO,EAAEF,MAAM;QAAEC,IAAI,EAAEA;MAAK,CAAC;IAC5C;IACA,KAAK,CAACD,MAAM,CAAC;EACjB;EACAG,QAAQA,CAAA,EAAG;IACP,OAAO,UAAU;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,SAASV,gBAAgB,CAAC;EACvD,OAAOI,OAAOA,CAAA,EAAG;IACb,OAAO,sBAAsB;EACjC;EACAK,QAAQA,CAAA,EAAG;IACP,OAAO,UAAU;EACrB;EACAE,MAAMA,CAACC,KAAK,EAAE;IACV,OAAO,IAAIF,oBAAoB,CAAC;MAC5BF,OAAO,EAAEP,YAAY,CAAC,IAAI,CAACO,OAAO,EAAEI,KAAK,CAACJ,OAAO,CAAC;MAClDK,iBAAiB,EAAEX,WAAW,CAAC,IAAI,CAACW,iBAAiB,EAAED,KAAK,CAACC,iBAAiB,CAAC;MAC/EC,iBAAiB,EAAEZ,WAAW,CAAC,IAAI,CAACY,iBAAiB,EAAEF,KAAK,CAACE,iBAAiB,CAAC;MAC/EP,IAAI,EAAE,IAAI,CAACA,IAAI,IAAI;IACvB,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}