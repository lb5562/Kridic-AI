{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucil\\\\Gen-AI-Contest\\\\FrontEnd\\\\kridic-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from 'react-bootstrap';\nimport './App.css'; // Assuming this file exists for styling\nimport { RemoteRunnable } from \"@langchain/core/runnables/remote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState('');\n  const remoteChain = new RemoteRunnable(\"http://localhost:8000\");\n  const stream = await remoteChain.streamEvents({\n    q\n  });\n  useEffect(() => {\n    // Generate a unique session ID when the component mounts\n    setSessionId(uuidv4());\n  }, []);\n\n  // Function to handle file selection\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Function to handle file upload\n\n  const handleUpload = event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    const url = `http://localhost:8000/upload-menu/${sessionId}`;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('session_id', sessionId);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post(url, formData, config).then(response => {\n      console.log(response.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: 'bot',\n        text: response.data\n      }]);\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n      alert('Error uploading file. Please try again.');\n    });\n  };\n\n  // Function to handle chat message submission\n  const handleChat = event => {\n    event.preventDefault();\n    const message = event.target.message.value.trim();\n    if (!message) {\n      alert('Please enter a message.');\n      return;\n    }\n    const url = 'http://localhost:8000/chat/' + sessionId;\n    const data = {\n      human_input: message // Ensure this matches what FastAPI expects\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.post(url, data, config).then(response => {\n      console.log(response.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: 'bot',\n        text: response.data\n      }]);\n    }).catch(error => {\n      if (error.response) {\n        console.error('Server Error:', error.response.data.detail);\n        alert(`Server Error: ${error.response.data.detail}`);\n      } else {\n        console.error('Error:', error.message);\n        alert('Error sending message. Please try again.');\n      }\n    });\n\n    // Clear the input field\n    event.target.message.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Menu Analyzer Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"session_id\",\n        value: sessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChat,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lfFuaZQR0LNVenyvaWZN9xu0T7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","v4","uuidv4","Button","RemoteRunnable","jsxDEV","_jsxDEV","App","_s","file","setFile","messages","setMessages","sessionId","setSessionId","remoteChain","stream","streamEvents","q","handleFileChange","event","target","files","handleUpload","preventDefault","alert","url","formData","FormData","append","config","headers","post","then","response","console","log","data","prevMessages","type","text","catch","error","handleChat","message","value","trim","human_input","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","variant","name","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/lucil/Gen-AI-Contest/FrontEnd/kridic-front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from 'react-bootstrap';\nimport './App.css'; // Assuming this file exists for styling\nimport { RemoteRunnable } from \"@langchain/core/runnables/remote\";\n\nasync function App() {\n  const [file, setFile] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState('');\n\n  const remoteChain = new RemoteRunnable(\"http://localhost:8000\");\n\n  const stream = await remoteChain.streamEvents({\n    q\n  });\n  useEffect(() => {\n    // Generate a unique session ID when the component mounts\n    setSessionId(uuidv4());\n  }, []);\n\n  // Function to handle file selection\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  // Function to handle file upload\n\n  const handleUpload = (event) => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n\n    const url = `http://localhost:8000/upload-menu/${sessionId}`;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('session_id', sessionId);\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n\n    axios.post(url, formData, config)\n      .then((response) => {\n        console.log(response.data);\n        setMessages((prevMessages) => [...prevMessages, { type: 'bot', text: response.data }]);\n      })\n      .catch((error) => {\n        console.error('Error uploading file:', error);\n        alert('Error uploading file. Please try again.');\n      });\n  };\n\n  // Function to handle chat message submission\n  const handleChat = (event) => {\n    event.preventDefault();\n    const message = event.target.message.value.trim();\n    if (!message) {\n      alert('Please enter a message.');\n      return;\n    }\n\n    const url = 'http://localhost:8000/chat/'+sessionId;\n    const data = {\n      human_input: message, // Ensure this matches what FastAPI expects\n    };\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    axios.post(url, data, config)\n      .then((response) => {\n        console.log(response.data);\n        setMessages((prevMessages) => [...prevMessages, { type: 'bot', text: response.data }]);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.error('Server Error:', error.response.data.detail);\n          alert(`Server Error: ${error.response.data.detail}`);\n        } else {\n          console.error('Error:', error.message);\n          alert('Error sending message. Please try again.');\n        }\n      });\n\n    // Clear the input field\n    event.target.message.value = '';\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Menu Analyzer Chatbot</h1>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" onChange={handleFileChange} />\n        <Button variant=\"success\" type=\"submit\">Upload</Button>\n        <input type=\"hidden\" name=\"session_id\" value={sessionId} />\n      </form>\n      \n      <form onSubmit={handleChat}>\n        <input type=\"text\" name=\"message\" />\n        <Button variant=\"primary\" type=\"submit\">Send</Button>\n      </form>\n\n      {/* Display messages */}\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.type}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}